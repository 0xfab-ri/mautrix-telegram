# Homeserver details
homeserver:
    address: https://matrix.org
    domain: matrix.org

# Application service host/registration related details
appservice:
    # The protocol the homeserver should use when connecting to the appservice.
    # Usually "http" or "https".
    protocol: http
    hostname: localhost
    port: 8080
    id: telegram

    # Path to the registration file. This is automatically updated when generating a registration.
    registration: ./registration.yaml

# Bridge config
bridge:
    # ${ID} is replaced with the user ID of the Telegram user.
    username_template: "telegram_${ID}"
    # ${DISPLAYNAME} is replaced with the display name of the Telegram user.
    displayname_template: "${DISPLAYNAME} (Telegram)"
    # ${NAME} is replaced with the name part of the public channel/group invite link ( https://t.me/${NAME} )
    alias_template: "telegram_${NAME}"
    # Username of the bot. The registration must be regenerated to change this.
    bot_username: telegrambot

    # Bridge management command configuration
    commands:
        # The prefix for all management commands.
        prefix: "!tg"

        # Enables the !tg api ... commands for debugging.
        # Do not enable this in production, it allows all whitelisted users to call any Telegram API methods freely.
        allow_direct_api_calls: false

    # Whitelist of user IDs that are allowed to use this bridge. Leave empty to disable.
    # You can enter a domain without the localpart to allow all users from that homeserver to use the bridge.
    whitelist:
    - "internal-hs.example.com"
    - "@user:public.example.com"

# Telegram config
telegram:
    # Get your own API keys at https://my.telegram.org/apps
    api_id: 12345
    api_hash: tjyd5yge35lbodk1xwzw2jstp90k55qz
